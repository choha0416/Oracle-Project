//GROUP BY 
//HAVING

SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO, JOB;

SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >=2000
ORDER BY DEPTNO, JOB;

SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >= 2000
ORDER BY DEPTNO, JOB;

SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
WHERE SAL <= 3000
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >= 2000
ORDER BY DEPTNO, JOB;

SELECT * FROM EMP;

SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL)
FROM EMP
GROUP BY DEPTNO,JOB
ORDER BY DEPTNO,JOB;

//JOIN
SELECT *
FROM EMP, DEPT
WHERE emp.deptno = dept.deptno
ORDER BY EMPNO;

SELECT * 
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
ORDER BY EMPNO;

SELECT E.EMPNO, E.ENAME, E.SAL, D.DEPTNO, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
AND SAL >=3000;

SELECT E1.EMPNO, E1.ENAME, E1.MGR,E2.EMPNO AS MGR_EMPNO, E2.ENAME AS MGR_ENAME
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO;


SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR,
E.HIREDATE, E.SAL,E.COMM,
DEPTNO,D.DNAME,D.LOC
FROM EMP E NATURAL JOIN DEPT D 
ORDER BY DEPTNO, E.EMPNO;

SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR,
E.HIREDATE, E.SAL,E.COMM,
DEPTNO,D.DNAME,D.LOC
FROM EMP E JOIN DEPT D USING(DEPTNO)
WHERE SAL >=3000
ORDER BY DEPTNO, E.EMPNO;


SELECT E.EMPNO, E.ENAME, E.JOB, E.MGR,
E.HIREDATE, E.SAL, E.COMM,
E.DEPTNO, D.DNAME, D.LOC
FROM EMP E JOIN DEPT D ON(E.DEPTNO = D.DEPTNO)
WHERE SAL <= 3000
ORDER BY E.DEPTNO, EMPNO;

SELECT * FROM EMP;

SELECT E1.EMPNO, E1.ENAME, E1.MGR,
E2.EMPNO AS MGR_EMPNO,
E2.ENAME AS MGR_ENAME
FROM EMP E1 LEFT OUTER JOIN EMP E2 ON(E1.MGR = E2.EMPNO)
ORDER BY E1.EMPNO;

//서브쿼리
SELECT SAL
FROM EMP
WHERE ENAME = 'JONES';

SELECT * 
FROM EMP
WHERE SAL > (SELECT SAL
FROM EMP
WHERE ENAME = 'JONES'
);

SELECT *
FROM EMP
WHERE SAL IN(SELECT MAX (SAL)
FROM EMP
GROUP BY DEPTNO);



SELECT *
FROM EMP
WHERE SAL >= ANY (SELECT MAX(SAL)
FROM EMP
GROUP BY DEPTNO);

SELECT * 
FROM EMP 
WHERE SAL >= SOME(SELECT MAX(SAL)
FROM EMP
GROUP BY DEPTNO);

SELECT * 
FROM EMP
WHERE SAL <ALL(SELECT SAL
FROM EMP
WHERE DEPTNO = 30);

SELECT *
FROM EMP
WHERE SAL >= ANY (SELECT MAX(SAL)
FROM EMP
GROUP BY DEPTNO);

create table bonus(
  ename varchar2(10),
  job   varchar2(9),
  sal   number,
  comm  number
);

create table salgrade(
  grade number,
  losal number,
  hisal number
);


//테이블에 데이터 추가하기

CREATE TABLE DEPT_TEMP
AS SELECT * FROM DEPT;

SELECT * FROM DEPT_TEMP;

INSERT INTO DEPT_TEMP (DEPTNO, DNAME, LOC)
VALUES (50,'DATABASE','SEOUL');

INSERT INTO DEPT_TEMP
VALUES (60,'NETWORK','BUSAN');

INSERT INTO DEPT_TEMP(DEPTNO,DNAME,LOC)
VALUES (70,'WEB','NULL');

INSERT INTO DEPT_TEMP(DEPTNO,DNAME,LOC)
VALUES (80,'MOBA','');

INSERT INTO DEPT_TEMP(DEPTNO,LOC)
VALUES (90,'INCHEON');

SELECT * FROM EMP_TEMP;

//테이블에 NULL입력
CREATE TABLE EMP_TEMP
AS SELECT * FROM EMP;

INSERT INTO EMP_TEMP(EMPNO,ENAME,JOB,MGR,HIREDATE, SAL,COMM,DEPTNO)
VALUES(9999,'홍길동','PRESIDNET','NULL','2001/01/01',5000,1000,10);


INSERT INTO EMP_TEMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO)
VALUES(2111,'이순신''MANAGER',9999,
TO_DATE('07/01/2001','DD/MM/YYYY'),4000, NULL,20);

INSERT INTO EMP_TEMP(EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPNO)
VALUES (3111,'심청이','MANAGER',9999,SYSDATE,4000,NULL,30);

//INSERT문 서브쿼리 사용 여러 데이터 한번에



insert into salgrade values (1, 700, 1200);
insert into salgrade values (2, 1201, 1400);
insert into salgrade values (3, 1401, 2000);
insert into salgrade values (4, 2001, 3000);
insert into salgrade values (5, 3001, 9999);
SELECT * FROM SALGRADE;

INSERT INTO EMP_TEMP(EMPNO, ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO)
SELECT EMP E, SALGRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL
AND S.GRADE = 1;
//데이터 정의어
CREATE TABLE EMP_DDL(
EMPNO NUMBER(4),
ENAME VARCHAR2(10),
JOB VARCHAR2(9),
MGR NUMBER(3),
HIREDATE DATE,
SAL NUMBER(7,2),
COMM NUMBER(7,2),
DEPTNO NUMBER(2));

DESC EMP_DDL;

CREATE TABLE DEPT_DDL
AS SELECT * FROM DEPT;

DESC DEPT_DDL;
SELECT * FROM DEPT_DDL;

CREATE TABLE EMP_DDL_30
AS SELECT *
FROM EMP
WHERE DEPTNO=30;

SELECT * FROM EMP_DDL_30;

CREATE TABLE EMPDEPT_DDL
AS SELECT E.EMPNO,E.ENAME,E.JOB,E.MGR,E.HIREDATE,E.SAL,E.COMM
,D.DEPTNO,D.DNAME,D.LOC
FROM EMP E, DEPT D
WHERE 1<>1;

SELECT * FROM EMPDEPT_DDL;

CREATE TABLE EMP_ALTER
AS SELECT * FROM EMP;

SELECT * FROM EMP_ALTER;

ALTER TABLE EMP_ALTER
ADD HP VARCHAR2(20);

SELECT * FROM EMP_ALTER;

ALTER TABLE EMP_ALTER
RENAME COLUMN HP TO TEL;
SELECT * FROM EMP_ALTER;

ALTER TABLE EMP_ALTER
MODIFY EMPNO NUMBER(5);

ALTER TABLE EMP_ALTER
DROP COLUMN TEL;

SELECT * FROM EMP_ALTER;

CREATE TABLE EMP_RENAME
AS SELECT * FROM EMP;

SELECT * FROM EMP_RENAME;

DROP TABLE EMP_RENAME;

DESC EMP_RENAME;

//제약조건 NOT NULL

CREATE TABLE TABLE_NOTNULL(
LOGIN_ID VARCHAR2(20) NOT NULL,
LOGIN_PWD VARCHAR2(20) NOT NULL,
TEL VARCHAR2(20));

DESC TABLE_NOTNULL;

INSERT INTO TABLE_NOTNULL(LOGIN_ID,LOGIND_PWD,TEL)
VALUES('TEST1,NULL,01012341234'); // 널 들어갈수 없음

//제약조건 확인
SELECT OWNER,CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS;

CREATE TABLE TABLE_NOTNULL2(
LOGIN_ID VARCHAR(20) CONSTRAINT IDNN NOT NULL,
LOGIN_PWD VARCHAR(20) CONSTRAINT PWDNN NOT NULL,
TEL VARCHAR2(20));

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS;

ALTER TABLE TABLE_NOTNULL
MODIFY(TEL NOT NULL);

UPDATE TABLE_NOTNULL
SET TEL='010-1234-5678'
WHERE LOGIN_ID = 'TEST1';

ALTER TABLE TABLE_NOTNULL2
RENAME CONSTRAINT IDNN TO IDNN1;

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS;

//제약 조건 삭제

ALTER TABLE TABLE_NOTNULL2
DROP CONSTRAINT IDNN1;

DESC TABLE_NOTNULL2;


//중복 되지 않는 값 UNIQUE

CREATE TABLE TABLE_UNIQUE(
LOGIN_ID VARCHAR2(20) UNIQUE,
LOGIN_PWD VARCHAR2(20) NOT NULL,
TEL VARCHAR2(20));

DESC TABLE_UNIQUE;

//제약 조건 확인

SELECT OWNER, CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'TABLE_UNIQUE';

INSERT INTO TABLE_UNIQUE(LOGIN_ID,LOGIN_PWD,TEL)
VALUES('TEST1','PWD1','010-1243-1234');

SELECT * FROM TABLE_UNIQUE;
//제약조건 지정방법 동일

// 기본키  PRIMARY KEY

CREATE TABLE PK(
ID VARCHAR2(20) PRIMARY KEY,
PWD VARCHAR2(20) NOT NULL,
TEL VARCHAR2(20));

DESC PK;

CREATE TABLE PK2(
LOGIN_ID VARCHAR2(20) CONSTRAINT IDPK2 PRIMARY KEY,
LOGINPWD_PWD VARCHAR2(20) CONSTRAINT PWDNN2 NOT NULL,
TEL VARCHAR2(20)
);

DESC PK2;
INSERT INTO PK(ID,PWD,TEL)
VALUES('TEST1','PWD1','010-4100-0416');

SELECT * FROM PK;

SELECT OWNER, CONSTRAINT_NAME,CONSTRAINT_TYPE,TABLE_NAME,R_OWNER,R_CONSTRAINT_NAME
FROM USER_CONSTRAINTS
WHERE TABLE_NAME IN('EMP','DEPT');

// FK FOREIGN KEY

CREATE TABLE DEPT_FK(
DEPTNO NUMBER(2) CONSTRAINT DEPT_PK PRIMARY KEY,
DNAME VARCHAR2(14),
LOC VARCHAR2(13));

DESC DEPT_FK;

CREATE TABLE EMP_FK(
EMPNO NUMBER(4) CONSTRAINT EMP_PK PRIMARY KEY,
ENAME VARCHAR2(10),
JOB VARCHAR(9),
MGR NUMBER(4),
HIREDATE DATE,
SAL NUMBER(7,2),
COMM NUMBER(7,2),
DEPTNO NUMBER(2) CONSTRAINT EMP_FK REFERENCES DEPT_FK(DEPTNO));

DESC EMP_FK;

INSERT INTO EMP_FK
VALUES(9999,'TEST1',JOB1,NULL,TO_DATE('2001/01/01','YYYY/MM//DD'),3000,5,10);

INSERT INTO DEPT_FK
VALUES(10,'DNAME','TLOC');

//형태와 법위지정 CHECK

CREATE TABLE TABLE_CHECK(
LOGIN_ID VARCHAR2(20) CONSTRAINT CKIDPK PRIMARY KEY,
LOGIN_PWD VARCHAR2(20) CONSTRAINT CKPWDCK CHECK(LENGTH(LOGIN_PWD)>3),
TEL VARCHAR2(20));

DESC TABLE_CHECK;

INSERT INTO TABLE_CHECK
VALUES('TEST1','1243','010-1234-5678');

//기본값을 정하는 DEFAULT

CREATE TABLE TABLE_DEFAULT(
LOGIN_ID VARCHAR2(20) CONSTRAINT TBCKIDPK PRIMARY KEY,
LOGIN_PWD VARCHAR(20) DEFAULT '1234',
TEL VARCHAR2(20));

INSERT INTO TABLE_DEFAULT VALUES ('TEST1',NULL,'010-1234-1234');

SELECT * FROM TABLE_DEFAULT;

INSERT INTO TABLE_DEFAULT(LOGIN_ID,TEL) VALUES ('TEST2','010-1234-1234');

SELECT * FROM TABLE_DEFAULT;
